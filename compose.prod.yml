services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile.prod
    ports:
      - "5000:8000"
    volumes:
      - ./back:/code
    environment:
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - UVICORN_LOG_LEVEL=debug
      - DEBUG=1
    command: uvicorn app.main:app --host 0.0.0.0 --reload
    restart: always
    env_file:
      - ./back/app/.env
    networks:
      - app-network
    depends_on:
      - redis
      - postgres_ai_echoes

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    volumes:
      - ./front:/code
      - /code/node_modules
    network_mode: "host"
    image: aiechoes_frontend:1.0
    restart: always
    environment:
      - CHOKIDAR_USEPOLLING=true

  postgres_ai_echoes:
    image: postgres
    environment:
      POSTGRES_DB: aiechoes_dev
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 1234
    restart: always
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5431:5432"

  redis:
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"
    restart: always
    command:
      [
        "redis-server",
        "--requirepass",
        "1234",
        "--loadmodule /opt/redis-stack/lib/redisearch.so",
        "--loadmodule /opt/redis-stack/lib/rejson.so",
      ]
    networks:
      - app-network
  minio:
    restart: always
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # MinIO API Port
      - "9001:9001" # MinIO Console Port
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    networks:
      - app-network
volumes:
  minio_data:

networks:
  app-network:
# docker-compose -f compose.dev.yml up -d
